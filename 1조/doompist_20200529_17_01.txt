-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- Member Table Create SQL
CREATE TABLE Member
(
    id            VARCHAR2(100)    NOT NULL, 
    pw            VARCHAR2(20)     NOT NULL, 
    email         VARCHAR2(20)     NOT NULL, 
    name          VARCHAR2(20)     NOT NULL, 
    phone         VARCHAR2(100)    NOT NULL, 
    member_div    NUMBER(1)        NOT NULL, 
    CONSTRAINT MEMBER_PK PRIMARY KEY (id)
)
/

COMMENT ON TABLE Member IS '멤버'
/

COMMENT ON COLUMN Member.id IS '아이디'
/

COMMENT ON COLUMN Member.pw IS '비번'
/

COMMENT ON COLUMN Member.email IS '이메일'
/

COMMENT ON COLUMN Member.name IS '이름'
/

COMMENT ON COLUMN Member.phone IS '전화번호'
/

COMMENT ON COLUMN Member.member_div IS '회원구분'
/


-- Member Table Create SQL
CREATE TABLE StoreList
(
    st_phone      VARCHAR2(20)     NOT NULL, 
    st_name       VARCHAR2(20)     NOT NULL, 
    st_key        NUMBER(18)       NOT NULL, 
    st_address    VARCHAR2(100)    NOT NULL, 
    id            VARCHAR2(100)    NOT NULL, 
    st_kind       VARCHAR2(20)     NOT NULL, 
    st_tag        VARCHAR2(200)    NOT NULL, 
    CONSTRAINT STORELIST_PK PRIMARY KEY (st_key)
)
/

COMMENT ON TABLE StoreList IS '맛집 게시판'
/

COMMENT ON COLUMN StoreList.st_phone IS '식당전화번호'
/

COMMENT ON COLUMN StoreList.st_name IS '식당이름'
/

COMMENT ON COLUMN StoreList.st_key IS '식별키'
/

COMMENT ON COLUMN StoreList.st_address IS '식당 주소'
/

COMMENT ON COLUMN StoreList.id IS '맴버ID'
/

COMMENT ON COLUMN StoreList.st_kind IS '식당카테고리'
/

COMMENT ON COLUMN StoreList.st_tag IS '태그'
/

ALTER TABLE StoreList
    ADD CONSTRAINT FK_StoreList_id_Member_id FOREIGN KEY (id)
        REFERENCES Member (id) ON DELETE CASCADE ENABLE
/


-- Member Table Create SQL
CREATE TABLE qna
(
    qna_storeKey    NUMBER(18)       NOT NULL, 
    qna_title       VARCHAR2(100)    NOT NULL, 
    id              VARCHAR2(100)    NOT NULL, 
    qna_contents    CLOB             NOT NULL, 
    qna_Date        DATE             NOT NULL, 
    qna_phone       VARCHAR2(20)     NOT NULL, 
    qna_kind        VARCHAR2(20)     NOT NULL, 
    qna_tag         VARCHAR2(200)    NOT NULL, 
    CONSTRAINT QNA_PK PRIMARY KEY (qna_storeKey)
)
/

COMMENT ON TABLE qna IS 'QNA'
/

COMMENT ON COLUMN qna.qna_storeKey IS '식당번호(식별키)'
/

COMMENT ON COLUMN qna.qna_title IS '식당이름'
/

COMMENT ON COLUMN qna.id IS '작성자'
/

COMMENT ON COLUMN qna.qna_contents IS '식당주소'
/

COMMENT ON COLUMN qna.qna_Date IS '날짜'
/

COMMENT ON COLUMN qna.qna_phone IS '식당전화번호'
/

COMMENT ON COLUMN qna.qna_kind IS '식당카테고리'
/

COMMENT ON COLUMN qna.qna_tag IS '태그'
/

ALTER TABLE qna
    ADD CONSTRAINT FK_qna_id_Member_id FOREIGN KEY (id)
        REFERENCES Member (id)
/


-- Member Table Create SQL
CREATE TABLE PayFirst
(
    pf_key       NUMBER(18)       NOT NULL, 
    id           VARCHAR2(100)    NOT NULL, 
    pf_date      DATE             NOT NULL, 
    pf_check     NUMBER(18)       NOT NULL, 
    st_key       NUMBER(18)       NULL, 
    pf_stname    VARCHAR2(20)     NOT NULL, 
    CONSTRAINT PAYFIRST_PK PRIMARY KEY (pf_key)
)
/

COMMENT ON TABLE PayFirst IS '리스트에서 주문하기 버튼을 클릭했을때 만들거'
/

COMMENT ON COLUMN PayFirst.pf_key IS '기본키'
/

COMMENT ON COLUMN PayFirst.id IS 'ID'
/

COMMENT ON COLUMN PayFirst.pf_date IS '날짜'
/

COMMENT ON COLUMN PayFirst.pf_check IS '결제여부 기본 0'
/

COMMENT ON COLUMN PayFirst.st_key IS '식당식별키'
/

COMMENT ON COLUMN PayFirst.pf_stname IS '식당이름'
/

ALTER TABLE PayFirst
    ADD CONSTRAINT FK_PayFirst_id_Member_id FOREIGN KEY (id)
        REFERENCES Member (id)
/

ALTER TABLE PayFirst
    ADD CONSTRAINT FK_PayFirst_st_key_StoreList_s FOREIGN KEY (st_key)
        REFERENCES StoreList (st_key)
/


-- Member Table Create SQL
CREATE TABLE StoreReview
(
    re_num         NUMBER(18)       NOT NULL, 
    re_Date        DATE             NOT NULL, 
    re_contents    CLOB             NOT NULL, 
    id             VARCHAR2(100)    NOT NULL, 
    st_key         NUMBER(18)       NOT NULL, 
    re_rating      NUMBER(18)       NOT NULL, 
    CONSTRAINT STOREREVIEW_PK PRIMARY KEY (re_num)
)
/

COMMENT ON TABLE StoreReview IS '리뷰'
/

COMMENT ON COLUMN StoreReview.re_num IS '글번호'
/

COMMENT ON COLUMN StoreReview.re_Date IS '날짜'
/

COMMENT ON COLUMN StoreReview.re_contents IS '내용'
/

COMMENT ON COLUMN StoreReview.id IS '작성자'
/

COMMENT ON COLUMN StoreReview.st_key IS '식별키'
/

COMMENT ON COLUMN StoreReview.re_rating IS '평점'
/

ALTER TABLE StoreReview
    ADD CONSTRAINT FK_StoreReview_id_Member_id FOREIGN KEY (id)
        REFERENCES Member (id)
/

ALTER TABLE StoreReview
    ADD CONSTRAINT FK_StoreReview_st_key_StoreLis FOREIGN KEY (st_key)
        REFERENCES StoreList (st_key)
/


-- Member Table Create SQL
CREATE TABLE Notice
(
    no_num      NUMBER(18)        NOT NULL, 
    title       VARCHAR2(2000)    NOT NULL, 
    regDate     DATE              NOT NULL, 
    contents    CLOB              NOT NULL, 
    likes       NUMBER(18)        NOT NULL, 
    CONSTRAINT NOTICE_PK PRIMARY KEY (no_num)
)
/

COMMENT ON TABLE Notice IS '공지사항게시판'
/

COMMENT ON COLUMN Notice.no_num IS '글번호'
/

COMMENT ON COLUMN Notice.title IS '제목'
/

COMMENT ON COLUMN Notice.regDate IS '날짜'
/

COMMENT ON COLUMN Notice.contents IS '내용'
/

COMMENT ON COLUMN Notice.likes IS '좋아요'
/


-- Member Table Create SQL
CREATE TABLE StoreMenu
(
    sm_menu     VARCHAR2(100)    NOT NULL, 
    sm_price    NUMBER(18)       NOT NULL, 
    sm_key      NUMBER(18)       NOT NULL, 
    st_key      NUMBER(18)       NOT NULL, 
    CONSTRAINT STOREMENU_PK PRIMARY KEY (sm_key)
)
/

COMMENT ON TABLE StoreMenu IS '메뉴+가격'
/

COMMENT ON COLUMN StoreMenu.sm_menu IS '메뉴'
/

COMMENT ON COLUMN StoreMenu.sm_price IS '가격'
/

COMMENT ON COLUMN StoreMenu.sm_key IS '기본키'
/

COMMENT ON COLUMN StoreMenu.st_key IS '식별키'
/

ALTER TABLE StoreMenu
    ADD CONSTRAINT FK_StoreMenu_st_key_StoreList_ FOREIGN KEY (st_key)
        REFERENCES StoreList (st_key)
/


-- Member Table Create SQL
CREATE TABLE PaySecond
(
    ps_key      NUMBER(18)      NOT NULL, 
    ps_menu     VARCHAR2(20)    NOT NULL, 
    ps_count    NUMBER(18)      NOT NULL, 
    ps_multi    NUMBER(18)      NOT NULL, 
    pf_key      NUMBER(18)      NOT NULL, 
    CONSTRAINT PAYSECOND_PK PRIMARY KEY (ps_key)
)
/

COMMENT ON TABLE PaySecond IS '결제대기(주문수량)'
/

COMMENT ON COLUMN PaySecond.ps_key IS '기본키'
/

COMMENT ON COLUMN PaySecond.ps_menu IS '메뉴(서브쿼리)'
/

COMMENT ON COLUMN PaySecond.ps_count IS '수량'
/

COMMENT ON COLUMN PaySecond.ps_multi IS '메뉴*수량=가격'
/

COMMENT ON COLUMN PaySecond.pf_key IS '만들거기본키'
/

ALTER TABLE PaySecond
    ADD CONSTRAINT FK_PaySecond_pf_key_PayFirst_p FOREIGN KEY (pf_key)
        REFERENCES PayFirst (pf_key)
/


-- Member Table Create SQL
CREATE TABLE qnaFile
(
    qna_storeKey    NUMBER(18)       NOT NULL, 
    qf_key          NUMBER(18)       NOT NULL, 
    qf_filename     VARCHAR2(200)    NOT NULL, 
    qf_oriname      VARCHAR2(200)    NOT NULL, 
    CONSTRAINT QNAFILE_PK PRIMARY KEY (qf_key)
)
/

COMMENT ON TABLE qnaFile IS 'qna사진저장'
/

COMMENT ON COLUMN qnaFile.qna_storeKey IS '식당번호(식별키)'
/

COMMENT ON COLUMN qnaFile.qf_key IS '기본키'
/

COMMENT ON COLUMN qnaFile.qf_filename IS '파일이름'
/

COMMENT ON COLUMN qnaFile.qf_oriname IS '원래파일이름'
/

ALTER TABLE qnaFile
    ADD CONSTRAINT FK_qnaFile_qna_storeKey_qna_qn FOREIGN KEY (qna_storeKey)
        REFERENCES qna (qna_storeKey)
/


-- Member Table Create SQL
CREATE TABLE qnaMenu
(
    qm_key          NUMBER(18)       NOT NULL, 
    qna_storekey    NUMBER(18)       NOT NULL, 
    qm_menu         VARCHAR2(200)    NOT NULL, 
    qm_price        NUMBER(18)       NOT NULL, 
    CONSTRAINT QNAMENU_PK PRIMARY KEY (qm_key)
)
/

COMMENT ON TABLE qnaMenu IS 'qna메뉴'
/

COMMENT ON COLUMN qnaMenu.qm_key IS '기본키'
/

COMMENT ON COLUMN qnaMenu.qna_storekey IS '식당번호(식별키)'
/

COMMENT ON COLUMN qnaMenu.qm_menu IS '메뉴'
/

COMMENT ON COLUMN qnaMenu.qm_price IS '가격'
/

ALTER TABLE qnaMenu
    ADD CONSTRAINT FK_qnaMenu_qna_storekey_qna_qn FOREIGN KEY (qna_storekey)
        REFERENCES qna (qna_storeKey)
/


-- Member Table Create SQL
CREATE TABLE storeFile
(
    st_key            NUMBER(18)       NOT NULL, 
    stfile_pk         NUMBER(18)       NOT NULL, 
    stfile_name       VARCHAR2(200)    NOT NULL, 
    stfile_oriname    VARCHAR2(200)    NOT NULL, 
    CONSTRAINT STOREFILE_PK PRIMARY KEY (stfile_pk)
)
/

COMMENT ON TABLE storeFile IS 'store사진저장'
/

COMMENT ON COLUMN storeFile.st_key IS '식별키'
/

COMMENT ON COLUMN storeFile.stfile_pk IS '기본키'
/

COMMENT ON COLUMN storeFile.stfile_name IS '파일이름'
/

COMMENT ON COLUMN storeFile.stfile_oriname IS '원래파일이름'
/

ALTER TABLE storeFile
    ADD CONSTRAINT FK_storeFile_st_key_StoreList_ FOREIGN KEY (st_key)
        REFERENCES StoreList (st_key)
/


-- Member Table Create SQL
CREATE TABLE storeReviewFile
(
    re_num            NUMBER(18)       NOT NULL, 
    refile_key        NUMBER(18)       NOT NULL, 
    refile_name       VARCHAR2(200)    NOT NULL, 
    refile_oriname    VARCHAR2(200)    NOT NULL, 
    CONSTRAINT STOREREVIEWFILE_PK PRIMARY KEY (refile_key)
)
/

COMMENT ON TABLE storeReviewFile IS 'review사진저장'
/

COMMENT ON COLUMN storeReviewFile.re_num IS '글번호'
/

COMMENT ON COLUMN storeReviewFile.refile_key IS '기본키'
/

COMMENT ON COLUMN storeReviewFile.refile_name IS '파일이름'
/

COMMENT ON COLUMN storeReviewFile.refile_oriname IS '원래파일이름'
/

ALTER TABLE storeReviewFile
    ADD CONSTRAINT FK_storeReviewFile_re_num_Stor FOREIGN KEY (re_num)
        REFERENCES StoreReview (re_num)
/


-- Member Table Create SQL
CREATE TABLE qnacheck
(
    qc_key          NUMBER(18)       NOT NULL, 
    id              VARCHAR2(100)    NOT NULL, 
    qc_check        NUMBER(18)       NOT NULL, 
    qna_storeKey    NUMBER(18)       NULL, 
    qc_title        VARCHAR2(100)    NOT NULL, 
    qc_Date         DATE             NOT NULL, 
    CONSTRAINT QNACHECK_PK PRIMARY KEY (qc_key)
)
/

COMMENT ON TABLE qnacheck IS '승인완료(보류)'
/

COMMENT ON COLUMN qnacheck.qc_key IS '기본키'
/

COMMENT ON COLUMN qnacheck.id IS '멤버ID'
/

COMMENT ON COLUMN qnacheck.qc_check IS '승인여부체크'
/

COMMENT ON COLUMN qnacheck.qna_storeKey IS '식당번호(식별키)'
/

COMMENT ON COLUMN qnacheck.qc_title IS '식당이름'
/

COMMENT ON COLUMN qnacheck.qc_Date IS '날짜'
/

ALTER TABLE qnacheck
    ADD CONSTRAINT FK_qnacheck_id_Member_id FOREIGN KEY (id)
        REFERENCES Member (id)
/

ALTER TABLE qnacheck
    ADD CONSTRAINT FK_qnacheck_qna_storeKey_qna_q FOREIGN KEY (qna_storeKey)
        REFERENCES qna (qna_storeKey)
/


-- Member Table Create SQL
CREATE TABLE Sel_check
(
    sel_key        NUMBER(18)        NOT NULL, 
    st_key         NUMBER(18)        NOT NULL, 
    selb_id        VARCHAR2(100)     NOT NULL, 
    selb_phone     VARCHAR2(100)     NOT NULL, 
    sel_meco       NVARCHAR2(100)    NOT NULL, 
    sel_date       DATE              NOT NULL, 
    sel_address    NVARCHAR2(100)    NOT NULL, 
    sel_okcheck    NUMBER(1)         NOT NULL, 
    CONSTRAINT SEL_CHECK_PK PRIMARY KEY (sel_key)
)
/

COMMENT ON TABLE Sel_check IS '판매자 판매확인'
/

COMMENT ON COLUMN Sel_check.sel_key IS '기본키'
/

COMMENT ON COLUMN Sel_check.st_key IS '식당번호'
/

COMMENT ON COLUMN Sel_check.selb_id IS '구매자 아이디'
/

COMMENT ON COLUMN Sel_check.selb_phone IS '구매자 전화번호'
/

COMMENT ON COLUMN Sel_check.sel_meco IS '구매 메뉴*수량'
/

COMMENT ON COLUMN Sel_check.sel_date IS '구매 날짜'
/

COMMENT ON COLUMN Sel_check.sel_address IS '배달 주소'
/

COMMENT ON COLUMN Sel_check.sel_okcheck IS '완료체크'
/

ALTER TABLE Sel_check
    ADD CONSTRAINT FK_Sel_check_st_key_StoreList_ FOREIGN KEY (st_key)
        REFERENCES StoreList (st_key)
/


-- Member Table Create SQL
CREATE TABLE Buy_address
(
    buy_key        NUMBER(18)        NOT NULL, 
    pf_key         NUMBER(18)        NULL, 
    buy_address    NVARCHAR2(100)    NOT NULL, 
    CONSTRAINT BUY_ADDRESS_PK PRIMARY KEY (buy_key)
)
/

COMMENT ON TABLE Buy_address IS 'ID+배달주소'
/

COMMENT ON COLUMN Buy_address.buy_key IS '기본키'
/

COMMENT ON COLUMN Buy_address.pf_key IS 'pf기본키'
/

COMMENT ON COLUMN Buy_address.buy_address IS '주소'
/

ALTER TABLE Buy_address
    ADD CONSTRAINT FK_Buy_address_pf_key_PayFirst FOREIGN KEY (pf_key)
        REFERENCES PayFirst (pf_key)
/


